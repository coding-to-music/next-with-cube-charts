import { useEffect, useState } from "react";
import cubejs from "@cubejs-client/core";
import Flatpickr from "react-flatpickr";
import LineChart from "../components/LineChart";
import { stackedChartData } from "../util";
import Link from "next/link";
import styles from "../styles/Home.module.css";

const cubejsApi = cubejs(process.env.NEXT_PUBLIC_CUBEJS_TOKEN, {
  apiUrl: process.env.NEXT_PUBLIC_CUBEJS_API_URL,
});

export default function Home() {
  const [data, setData] = useState(null);
  const [error, setError] = useState(null);
  const [dateRange, setDateRange] = useState({
    startDate: "2017-08-02",
    endDate: "2018-01-31",
  });

  useEffect(() => {
    loadData(); // function to load data from Cube
  }, [dateRange]);

  /**
   * This function fetches data from Cube's api
   **/
  const loadData = () => {
    cubejsApi
      .load({
        measures: ["Orders.count"],
        timeDimensions: [
          {
            dimension: "Orders.createdAt",
            granularity: `day`,
            dateRange: [dateRange.startDate, dateRange.endDate],
          },
        ],
      })
      .then((resultSet) => {
        setData(stackedChartData(resultSet));
      })
      .catch((error) => {
        setError(error);
      });
  };

  if (error) {
    return <div>Error: {error.message}</div>;
  }

  if (!data) {
    return <div>Loading...</div>;
  }

  return (
    <div className={styles.container}>
      <h1>Client Rendered Charts Example</h1>
      <h5>🗓️ Select a date range</h5>
      <Flatpickr
        options={{
          allowInput: true,
          mode: "range",
          minDate: new Date("2016-12-12"),
          maxDate: new Date("2020-12-12"),
        }}
        value={[dateRange.startDate, dateRange.endDate]}
        onChange={(selectedDates) => {
          if (selectedDates.length === 2) {
            setDateRange({
              startDate: selectedDates[0],
              endDate: selectedDates[1],
            });
          }
        }}
      />
      <h3>📈 Order count timeseries</h3>
      <LineChart data={data} />
    </div>
  );
}
